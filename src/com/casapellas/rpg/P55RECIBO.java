/* 
 * @(#)P55RECIBO.java       09:56:35 AM 2009/09/28
 *
 * Class generated by iSeries tools.  Such as the Web Interaction, 
 * the Web Service, or the Program Call Wizards.
 */ 
package com.casapellas.rpg;
import com.ibm.as400.access.*;
import com.ibm.connector.as400.ProgramCallBean;
import java.math.BigDecimal;

public class P55RECIBO extends ProgramCallBean
{

  public P55RECIBO()
  {
    super();
    setJavaAppMode(true);
    setRuntimeConfigFile("defaultPCW");
    setPcmlName("com.casapellas.rpg.P55RECIBO");
    setProgramName("P55RECIBO");
    initInput();
  }

  public P55RECIBO( String jndiName )
  {
    super(jndiName);
    setJavaAppMode(true);
    setRuntimeConfigFile("defaultPCW");
    setPcmlName("com.casapellas.rpg.P55RECIBO");
    setProgramName("P55RECIBO");
    initInput();
  }

	/*
	 * Initialize input paramters to default values.
	 */
	public void initInput() {
		setIDCAJA(new BigDecimal("0"));

		setNORECIBO(new BigDecimal("0"));

		setTIPORECIBO("");

		setIDEMPRESA("");

		setIDSUCURSAL("");

		setRESULTADO("");

		setCOMANDO("");

	}
	public BigDecimal getIDCAJA() {
		return (BigDecimal) getValue(_strParentField + ".IDCAJA");
	}

	public void setIDCAJA(BigDecimal IDCAJA) {
		setValue(_strParentField + ".IDCAJA", IDCAJA);
	}


	public BigDecimal getNORECIBO() {
		return (BigDecimal) getValue(_strParentField + ".NORECIBO");
	}

	public void setNORECIBO(BigDecimal NORECIBO) {
		setValue(_strParentField + ".NORECIBO", NORECIBO);
	}


	public String getTIPORECIBO() {
		return (String) getValue(_strParentField + ".TIPORECIBO");
	}

	public void setTIPORECIBO(String TIPORECIBO) {
		setValue(_strParentField + ".TIPORECIBO", TIPORECIBO);
	}


	public String getIDEMPRESA() {
		return (String) getValue(_strParentField + ".IDEMPRESA");
	}

	public void setIDEMPRESA(String IDEMPRESA) {
		setValue(_strParentField + ".IDEMPRESA", IDEMPRESA);
	}


	public String getIDSUCURSAL() {
		return (String) getValue(_strParentField + ".IDSUCURSAL");
	}

	public void setIDSUCURSAL(String IDSUCURSAL) {
		setValue(_strParentField + ".IDSUCURSAL", IDSUCURSAL);
	}


	public String getRESULTADO() {
		return (String) getValue(_strParentField + ".RESULTADO");
	}

	public void setRESULTADO(String RESULTADO) {
		setValue(_strParentField + ".RESULTADO", RESULTADO);
	}


	public String getCOMANDO() {
		return (String) getValue(_strParentField + ".COMANDO");
	}

	public void setCOMANDO(String COMANDO) {
		setValue(_strParentField + ".COMANDO", COMANDO);
	}




    /**
     * Invoke the host program.
     *
     * The connection data, i.e. host information, must be set.
     * All input parameter(s) should have been set.
     */
    public void invoke()
    {
      super.invoke();
    }

    /**
     * Set connection object.
     * To display signon prompt, pass an AS400 with 
     * partial authentication, such as:
     *        new AS400("myiSeries")
     *        new AS400("myiSeries","myID")
     *
     * @param as400Obj AS400 A toolbox AS400 object
     */
    public void setConnectionData( AS400 as400Obj )
    {
      super.setConnectionData( as400Obj );
    }

    /**
     * Set connection authentication parameters.
     * These values will be used to authenticate quietly
     * to the iSeries.  Invalid authentication parameters
     * will result in Exception, not the signon prompt.
     *
     * @param hostname String iSeries hostname
     * @param userid   String user id
     * @param passwd   String password
     */
    public void setConnectionData( String hostname, String userid, String passwd )
    {
      super.setConnectionData(hostname, userid, passwd );
    }

    /**
     * Set program path.
     * Allows for dynamically specifying the program path.
     * e.g. /QSYS.LIB/MYDEV.LIB/TEST1.PGM
     *
     * @param path A String containing the path to the program object to be run on the server.
     */
    public void setPath( String path )
    {
      super.setPath(path);
    }

    /**
     * Get the AS400 object
     *
     * @return AS400 AS400 Toolbox connection object
     */
    public AS400 getAS400Object( )
    {
      return super.getAS400Object();
    }

    /**
     * Initialize the user portion of library list for the server job.
     *
     * @param liblist  String[] library list
     */
    public void setLibraryList( String[] liblist )
    {
      super.setLibraryList(liblist);
    }

    /**
     * Add a list of library positions
     * e.g *FIRST,*LAST
     *
     * @param liblistPos Sting[] library list
     */
    public void setLibraryListPos( String[] liblistPos)
    {
      super.setLibraryListPos(liblistPos);
    }

    /**
     * Set the current library to be a named library, *CRTDFT, or *USRPRF.
     * If *CRTDFT is set, any objects that are created into the current library
     * using *CURLIB on the create command, use library QGPL as the default current library. 
     * If *USRPRF is set, then the setting in the user profile is used.
     *
     * @param curLib String current library
     */
     public void setCurrentLibrary( String curLib )
     {
       super.setCurrentLibrary(curLib);
     }

    /**
     * Specify the host command to execute after signing on to the host system
     * in the Initial command field.
     * For example, you can specify a CL setup program to set the environment
     * before invoking applications.
     *
     * @param initCmd String initial command
     */
     public void setInitialCommand( String initCmd )
     {
       super.setInitialCommand(initCmd);
     }
  
    /**
     * Disconnect the iSeries connection
     *
     */
    public void disconnect( )
    {
      super.disconnect();
    }

    /**
     * Enable Pcml trace
     *
     */
    public void setTraceEnabled( boolean bEnabled )
    {
      super.setTraceEnabled(bEnabled);
    }



	private String _strParentField = "P55RECIBO";
	private static final long serialVersionUID = -4833029690778218926L;}

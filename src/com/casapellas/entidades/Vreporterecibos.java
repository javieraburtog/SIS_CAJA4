package com.casapellas.entidades;

 
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.casapellas.controles.MetodosPagoCtrl;

/**
 * Vreporterecibos generated by hbm2java
 */
public class Vreporterecibos implements java.io.Serializable {

	private static final long serialVersionUID = -7680190418565517660L;

	public Vreporterecibos() {
		super();
	}
	private int id;
	private Date fecha;
	private int caid;
	private String codcomp;
	private String codsuc;
	private String tiporec;
	private String unidadnegociorecibo;
	private String tipoderecibo;
	private int numrec;
	private int nobatch;
	private String recjde;
	private int codcli;
	private String cliente;
	private String facturas;
	private String tipotransaccion;
	private String moneda;
	private String mpago;
	private BigDecimal monto;
	private BigDecimal tasa;
	private BigDecimal equiv;
	private BigDecimal cambio;
	private BigDecimal montocordobas;
	private BigDecimal montodolares;
	private String refer1;
	private String refer2;
	private String refer3;
	private String banco;
	private String usuario;
	private String cajero;
	private String estado;
	private String motivo;
	private String usuarioanula;
	private String formadepago;
	private String nombrecaja;
	private String nombrecompania;
	private Date hora;
	private String caprnt;
	private int codigocontador;
	private String nombrecontador;
	private String usuariocontador;
	private String cuentacontablebanco;
	
	
	
	public  String dataToExcelNoFormat(String concatwith){
		String signoPago =  ( (estado.compareTo("A") == 0 ) || ( tiporec.compareTo("DCO") == 0) ) ? "-" : "" ;
		String signoCambio = ( (estado.compareTo("A") == 0 ) || ( tiporec.compareTo("DCO") == 0) ) ? "" : "-" ;
		
		String _motivo = "", _estado = "";
		
		if (estado.trim().toLowerCase().equals("error")) {
			_motivo = motivo;
			_estado = "Error";
		}else if(estado.compareTo("A") == 0) {
			_motivo = motivo;
			_estado = "Anulado";
		}else {
			_motivo = "   ";
			_estado = "   ";
		}
		
		return 
		String.valueOf(caid) +concatwith +		
		new SimpleDateFormat("yyyy-MM-dd").format(fecha)  + concatwith +
		String.valueOf(numrec) +concatwith +
		tipotransaccion +concatwith + 
		facturas +concatwith +
		tipoderecibo + concatwith +
		moneda +concatwith + 
		formadepago +concatwith +
		String.valueOf(codcli) +concatwith +
		cliente +concatwith+
		
		signoPago + montocordobas.toString() + concatwith+
		tasa.toString() +concatwith+
		signoPago + montodolares.toString() + concatwith+ 
		
		signoCambio + cambio + concatwith+ 
		
		 refer1.trim() +  ( ( banco == null|| banco.trim().isEmpty() )  ? " ": " / " + banco.trim() )   + concatwith + 
		 ( ( cuentacontablebanco == null || cuentacontablebanco.trim().isEmpty() )? " " :  cuentacontablebanco.trim()  ) + concatwith+ 
		 
		String.valueOf(recjde) +concatwith+
		String.valueOf(nobatch)  +concatwith+
		usuario +concatwith+
		
		_motivo  + concatwith +
		
		estado   + concatwith + 
		
		_estado  + concatwith +
		
		usuarioanula  + concatwith  +
		unidadnegociorecibo  + concatwith  + 
		nombrecaja  + concatwith +
		nombrecompania  + concatwith  +
		cajero + concatwith +  
		caprnt.trim().toUpperCase() + concatwith +
		
		( mpago.compareTo(MetodosPagoCtrl.TRANSFERENCIA) == 0 ? refer3.trim() : (  mpago.compareTo(MetodosPagoCtrl.DEPOSITO) == 0 ||  mpago.compareTo(MetodosPagoCtrl.CHEQUE) == 0 ) ? refer2.trim() : "0" )
	 ;
	}
	
	public  String dataToExcel(String concatwith){
		String signoPago =  ( (estado.compareTo("A") == 0 ) || ( tiporec.compareTo("DCO") == 0) ) ? "-" : "" ;
		String signoCambio = ( (estado.compareTo("A") == 0 ) || ( tiporec.compareTo("DCO") == 0) ) ? "" : "-" ;
		
		String _motivo = "", _estado = "";
		
		if (estado.trim().toLowerCase().contains("error")) {
			_motivo = motivo;
			_estado = estado;
		}else if(estado.compareTo("A") == 0) {
			_motivo = motivo;
			_estado = "Anulado";
		}else {
			_motivo = motivo;
			_estado = estado;
		}
	
		
		return 
		new SimpleDateFormat("yyyy-MM-dd").format(fecha)  + concatwith +
		String.valueOf(numrec) +concatwith +
		tipotransaccion +concatwith + 
		facturas +concatwith +
		tipoderecibo + concatwith +
		moneda +concatwith + 
		formadepago +concatwith +
		String.valueOf(codcli) +concatwith +
		cliente +concatwith+
		
		signoPago + montocordobas.toString() + concatwith+
		tasa.toString() +concatwith+
		signoPago + montodolares.toString() + concatwith+ 
		
		signoCambio + cambio + concatwith+ 
		
		 refer1.trim() +  ( ( banco == null|| banco.trim().isEmpty() )  ? " ": " / " + banco.trim() )   + concatwith + 
		 ( ( cuentacontablebanco == null || cuentacontablebanco.trim().isEmpty() )? " " :  cuentacontablebanco.trim()  ) + concatwith+ 
		 
		String.valueOf(recjde) +concatwith+
		String.valueOf(nobatch)  +concatwith+
		usuario +concatwith+
		
		_motivo  + concatwith +
		
		estado   + concatwith + 
		
		_estado  + concatwith +
		
		usuarioanula  + concatwith  +
		unidadnegociorecibo  + concatwith  + 
		nombrecaja  + concatwith +
		nombrecompania  + concatwith  +
		cajero + concatwith +  
		caprnt.trim().toUpperCase() + concatwith +
		
		( mpago.compareTo("8") == 0 ? refer3.trim() : (  mpago.compareTo("N") == 0 ||  mpago.compareTo("Q") == 0 ) ? refer2.trim() : "0" )
	 ;
	}
	
	
	
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public Date getFecha() {
		return fecha;
	}
	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}
	public int getCaid() {
		return caid;
	}
	public void setCaid(int caid) {
		this.caid = caid;
	}
	public String getCodcomp() {
		return codcomp;
	}
	public void setCodcomp(String codcomp) {
		this.codcomp = codcomp;
	}
	public String getCodsuc() {
		return codsuc;
	}
	public void setCodsuc(String codsuc) {
		this.codsuc = codsuc;
	}
	public String getTiporec() {
		return tiporec;
	}
	public void setTiporec(String tiporec) {
		this.tiporec = tiporec;
	}
	public String getUnidadnegociorecibo() {
		return unidadnegociorecibo;
	}
	public void setUnidadnegociorecibo(String unidadnegociorecibo) {
		this.unidadnegociorecibo = unidadnegociorecibo;
	}
	public String getTipoderecibo() {
		return tipoderecibo;
	}
	public void setTipoderecibo(String tipoderecibo) {
		this.tipoderecibo = tipoderecibo;
	}
	public int getNobatch() {
		return nobatch;
	}
	public void setNobatch(int nobatch) {
		this.nobatch = nobatch;
	}
	public String getRecjde() {
		return recjde;
	}
	public void setRecjde(String recjde) {
		this.recjde = recjde;
	}
	public int getCodcli() {
		return codcli;
	}
	public void setCodcli(int codcli) {
		this.codcli = codcli;
	}
	public String getCliente() {
		return cliente;
	}
	public void setCliente(String cliente) {
		this.cliente = cliente;
	}
	public String getFacturas() {
		return facturas;
	}
	public void setFacturas(String facturas) {
		this.facturas = facturas;
	}
	public String getTipotransaccion() {
		return tipotransaccion;
	}
	public void setTipotransaccion(String tipotransaccion) {
		this.tipotransaccion = tipotransaccion;
	}
	public String getMoneda() {
		return moneda;
	}
	public void setMoneda(String moneda) {
		this.moneda = moneda;
	}
	public String getMpago() {
		return mpago;
	}
	public void setMpago(String mpago) {
		this.mpago = mpago;
	}
	public BigDecimal getMonto() {
		return monto;
	}
	public void setMonto(BigDecimal monto) {
		this.monto = monto;
	}
	public BigDecimal getTasa() {
		return tasa;
	}
	public void setTasa(BigDecimal tasa) {
		this.tasa = tasa;
	}
	public BigDecimal getEquiv() {
		return equiv;
	}
	public void setEquiv(BigDecimal equiv) {
		this.equiv = equiv;
	}
	public BigDecimal getCambio() {
		return cambio;
	}
	public void setCambio(BigDecimal cambio) {
		this.cambio = cambio;
	}
	public BigDecimal getMontocordobas() {
		return montocordobas;
	}
	public void setMontocordobas(BigDecimal montocordobas) {
		this.montocordobas = montocordobas;
	}
	public BigDecimal getMontodolares() {
		return montodolares;
	}
	public void setMontodolares(BigDecimal montodolares) {
		this.montodolares = montodolares;
	}
	public String getRefer1() {
		return refer1;
	}
	public void setRefer1(String refer1) {
		this.refer1 = refer1;
	}
	public String getRefer2() {
		return refer2;
	}
	public void setRefer2(String refer2) {
		this.refer2 = refer2;
	}
	public String getRefer3() {
		return refer3;
	}
	public void setRefer3(String refer3) {
		this.refer3 = refer3;
	}
	public String getBanco() {
		return banco;
	}
	public void setBanco(String banco) {
		this.banco = banco;
	}
	public String getUsuario() {
		return usuario;
	}
	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}
	public String getCajero() {
		return cajero;
	}
	public void setCajero(String cajero) {
		this.cajero = cajero;
	}
	public String getEstado() {
		return estado;
	}
	public void setEstado(String estado) {
		this.estado = estado;
	}
	public String getMotivo() {
		return motivo;
	}
	public void setMotivo(String motivo) {
		this.motivo = motivo;
	}
	public String getUsuarioanula() {
		return usuarioanula;
	}
	public void setUsuarioanula(String usuarioanula) {
		this.usuarioanula = usuarioanula;
	}
	public String getFormadepago() {
		return formadepago;
	}
	public void setFormadepago(String formadepago) {
		this.formadepago = formadepago;
	}
	public String getNombrecaja() {
		return nombrecaja;
	}
	public void setNombrecaja(String nombrecaja) {
		this.nombrecaja = nombrecaja;
	}
	public String getNombrecompania() {
		return nombrecompania;
	}
	public void setNombrecompania(String nombrecompania) {
		this.nombrecompania = nombrecompania;
	}
	public static long getSerialversionuid() {
		return serialVersionUID;
	}
	public int getNumrec() {
		return numrec;
	}
	public void setNumrec(int numrec) {
		this.numrec = numrec;
	}
	public Date getHora() {
		return hora;
	}
	public void setHora(Date hora) {
		this.hora = hora;
	}
	public String getCaprnt() {
		return caprnt;
	}

	public void setCaprnt(String caprnt) {
		this.caprnt = caprnt;
	}

	public int getCodigocontador() {
		return codigocontador;
	}

	public void setCodigocontador(int codigocontador) {
		this.codigocontador = codigocontador;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((banco == null) ? 0 : banco.hashCode());
		result = prime * result + caid;
		result = prime * result + ((cajero == null) ? 0 : cajero.hashCode());
		result = prime * result + ((cambio == null) ? 0 : cambio.hashCode());
		result = prime * result + ((caprnt == null) ? 0 : caprnt.hashCode());
		result = prime * result + ((cliente == null) ? 0 : cliente.hashCode());
		result = prime * result + codcli;
		result = prime * result + ((codcomp == null) ? 0 : codcomp.hashCode());
		result = prime * result + codigocontador;
		result = prime * result + ((codsuc == null) ? 0 : codsuc.hashCode());
		result = prime
				* result
				+ ((cuentacontablebanco == null) ? 0 : cuentacontablebanco
						.hashCode());
		result = prime * result + ((equiv == null) ? 0 : equiv.hashCode());
		result = prime * result + ((estado == null) ? 0 : estado.hashCode());
		result = prime * result
				+ ((facturas == null) ? 0 : facturas.hashCode());
		result = prime * result + ((fecha == null) ? 0 : fecha.hashCode());
		result = prime * result
				+ ((formadepago == null) ? 0 : formadepago.hashCode());
		result = prime * result + ((hora == null) ? 0 : hora.hashCode());
		result = prime * result + id;
		result = prime * result + ((moneda == null) ? 0 : moneda.hashCode());
		result = prime * result + ((monto == null) ? 0 : monto.hashCode());
		result = prime * result
				+ ((montocordobas == null) ? 0 : montocordobas.hashCode());
		result = prime * result
				+ ((montodolares == null) ? 0 : montodolares.hashCode());
		result = prime * result + ((motivo == null) ? 0 : motivo.hashCode());
		result = prime * result + ((mpago == null) ? 0 : mpago.hashCode());
		result = prime * result + nobatch;
		result = prime * result
				+ ((nombrecaja == null) ? 0 : nombrecaja.hashCode());
		result = prime * result
				+ ((nombrecompania == null) ? 0 : nombrecompania.hashCode());
		result = prime * result
				+ ((nombrecontador == null) ? 0 : nombrecontador.hashCode());
		result = prime * result + numrec;
		result = prime * result + ((recjde == null) ? 0 : recjde.hashCode());
		result = prime * result + ((refer1 == null) ? 0 : refer1.hashCode());
		result = prime * result + ((refer2 == null) ? 0 : refer2.hashCode());
		result = prime * result + ((refer3 == null) ? 0 : refer3.hashCode());
		result = prime * result + ((tasa == null) ? 0 : tasa.hashCode());
		result = prime * result
				+ ((tipoderecibo == null) ? 0 : tipoderecibo.hashCode());
		result = prime * result + ((tiporec == null) ? 0 : tiporec.hashCode());
		result = prime * result
				+ ((tipotransaccion == null) ? 0 : tipotransaccion.hashCode());
		result = prime
				* result
				+ ((unidadnegociorecibo == null) ? 0 : unidadnegociorecibo
						.hashCode());
		result = prime * result + ((usuario == null) ? 0 : usuario.hashCode());
		result = prime * result
				+ ((usuarioanula == null) ? 0 : usuarioanula.hashCode());
		result = prime * result
				+ ((usuariocontador == null) ? 0 : usuariocontador.hashCode());
		return result;
	}



	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Vreporterecibos other = (Vreporterecibos) obj;
		if (banco == null) {
			if (other.banco != null)
				return false;
		} else if (!banco.equals(other.banco))
			return false;
		if (caid != other.caid)
			return false;
		if (cajero == null) {
			if (other.cajero != null)
				return false;
		} else if (!cajero.equals(other.cajero))
			return false;
		if (cambio == null) {
			if (other.cambio != null)
				return false;
		} else if (!cambio.equals(other.cambio))
			return false;
		if (caprnt == null) {
			if (other.caprnt != null)
				return false;
		} else if (!caprnt.equals(other.caprnt))
			return false;
		if (cliente == null) {
			if (other.cliente != null)
				return false;
		} else if (!cliente.equals(other.cliente))
			return false;
		if (codcli != other.codcli)
			return false;
		if (codcomp == null) {
			if (other.codcomp != null)
				return false;
		} else if (!codcomp.equals(other.codcomp))
			return false;
		if (codigocontador != other.codigocontador)
			return false;
		if (codsuc == null) {
			if (other.codsuc != null)
				return false;
		} else if (!codsuc.equals(other.codsuc))
			return false;
		if (cuentacontablebanco == null) {
			if (other.cuentacontablebanco != null)
				return false;
		} else if (!cuentacontablebanco.equals(other.cuentacontablebanco))
			return false;
		if (equiv == null) {
			if (other.equiv != null)
				return false;
		} else if (!equiv.equals(other.equiv))
			return false;
		if (estado == null) {
			if (other.estado != null)
				return false;
		} else if (!estado.equals(other.estado))
			return false;
		if (facturas == null) {
			if (other.facturas != null)
				return false;
		} else if (!facturas.equals(other.facturas))
			return false;
		if (fecha == null) {
			if (other.fecha != null)
				return false;
		} else if (!fecha.equals(other.fecha))
			return false;
		if (formadepago == null) {
			if (other.formadepago != null)
				return false;
		} else if (!formadepago.equals(other.formadepago))
			return false;
		if (hora == null) {
			if (other.hora != null)
				return false;
		} else if (!hora.equals(other.hora))
			return false;
		if (id != other.id)
			return false;
		if (moneda == null) {
			if (other.moneda != null)
				return false;
		} else if (!moneda.equals(other.moneda))
			return false;
		if (monto == null) {
			if (other.monto != null)
				return false;
		} else if (!monto.equals(other.monto))
			return false;
		if (montocordobas == null) {
			if (other.montocordobas != null)
				return false;
		} else if (!montocordobas.equals(other.montocordobas))
			return false;
		if (montodolares == null) {
			if (other.montodolares != null)
				return false;
		} else if (!montodolares.equals(other.montodolares))
			return false;
		if (motivo == null) {
			if (other.motivo != null)
				return false;
		} else if (!motivo.equals(other.motivo))
			return false;
		if (mpago == null) {
			if (other.mpago != null)
				return false;
		} else if (!mpago.equals(other.mpago))
			return false;
		if (nobatch != other.nobatch)
			return false;
		if (nombrecaja == null) {
			if (other.nombrecaja != null)
				return false;
		} else if (!nombrecaja.equals(other.nombrecaja))
			return false;
		if (nombrecompania == null) {
			if (other.nombrecompania != null)
				return false;
		} else if (!nombrecompania.equals(other.nombrecompania))
			return false;
		if (nombrecontador == null) {
			if (other.nombrecontador != null)
				return false;
		} else if (!nombrecontador.equals(other.nombrecontador))
			return false;
		if (numrec != other.numrec)
			return false;
		if (recjde == null) {
			if (other.recjde != null)
				return false;
		} else if (!recjde.equals(other.recjde))
			return false;
		if (refer1 == null) {
			if (other.refer1 != null)
				return false;
		} else if (!refer1.equals(other.refer1))
			return false;
		if (refer2 == null) {
			if (other.refer2 != null)
				return false;
		} else if (!refer2.equals(other.refer2))
			return false;
		if (refer3 == null) {
			if (other.refer3 != null)
				return false;
		} else if (!refer3.equals(other.refer3))
			return false;
		if (tasa == null) {
			if (other.tasa != null)
				return false;
		} else if (!tasa.equals(other.tasa))
			return false;
		if (tipoderecibo == null) {
			if (other.tipoderecibo != null)
				return false;
		} else if (!tipoderecibo.equals(other.tipoderecibo))
			return false;
		if (tiporec == null) {
			if (other.tiporec != null)
				return false;
		} else if (!tiporec.equals(other.tiporec))
			return false;
		if (tipotransaccion == null) {
			if (other.tipotransaccion != null)
				return false;
		} else if (!tipotransaccion.equals(other.tipotransaccion))
			return false;
		if (unidadnegociorecibo == null) {
			if (other.unidadnegociorecibo != null)
				return false;
		} else if (!unidadnegociorecibo.equals(other.unidadnegociorecibo))
			return false;
		if (usuario == null) {
			if (other.usuario != null)
				return false;
		} else if (!usuario.equals(other.usuario))
			return false;
		if (usuarioanula == null) {
			if (other.usuarioanula != null)
				return false;
		} else if (!usuarioanula.equals(other.usuarioanula))
			return false;
		if (usuariocontador == null) {
			if (other.usuariocontador != null)
				return false;
		} else if (!usuariocontador.equals(other.usuariocontador))
			return false;
		return true;
	}



	public String getNombrecontador() {
		return nombrecontador;
	}

	public void setNombrecontador(String nombrecontador) {
		this.nombrecontador = nombrecontador;
	}

	public String getUsuariocontador() {
		return usuariocontador;
	}

	public void setUsuariocontador(String usuariocontador) {
		this.usuariocontador = usuariocontador;
	}

	public String getCuentacontablebanco() {
		return cuentacontablebanco;
	}
	public void setCuentacontablebanco(String cuentacontablebanco) {
		this.cuentacontablebanco = cuentacontablebanco;
	}
 
	
}
